[["C:\\Users\\Ivand\\DiceGameMVC1\\src\\__tests__\\gameModel.test.ts",{"fileContent":"const { DataTypes } = require('sequelize');\r\nconst { MockSequelize } = require('sequelize-mock');\r\nconst { GameDb } = require('../models/gameModel');\r\n\r\n\r\ndescribe('GameDb Model', () => {\r\n  const mockDb = new MockSequelize();\r\n  const Game = mockDb.define('Games', {\r\n    id: {\r\n      type: DataTypes.BIGINT,\r\n      primaryKey: true,\r\n      autoIncrement: true,\r\n    },\r\n    diceValue1: {\r\n      type: DataTypes.INTEGER,\r\n      allowNull: false,\r\n    },\r\n    diceValue2: {\r\n      type: DataTypes.INTEGER,\r\n      allowNull: false,\r\n    },\r\n    result: {\r\n      type: DataTypes.INTEGER,\r\n      allowNull: false,\r\n    },\r\n    win: {\r\n      type: DataTypes.BOOLEAN,\r\n      allowNull: false,\r\n    },\r\n    createdAt: {\r\n      type: DataTypes.DATE,\r\n      defaultValue: mockDb.fn('NOW'),\r\n      allowNull: false,\r\n    },\r\n    updatedAt: {\r\n      type: DataTypes.DATE,\r\n      defaultValue: mockDb.fn('NOW'),\r\n      allowNull: false,\r\n    },\r\n    playerId: {\r\n      type: DataTypes.INTEGER,\r\n      references: {\r\n        model: 'players',\r\n        key: 'id',\r\n      },\r\n      allowNull: false,\r\n    },\r\n  });\r\n\r\n  beforeAll(() => {\r\n    mockDb.models.Games = Game;\r\n  });\r\n\r\n  it('should create a game instance', async () => {\r\n    const game = await Game.create({\r\n      diceValue1: 1,\r\n      diceValue2: 2,\r\n      result: 3,\r\n      win: true,\r\n      playerId: 1,\r\n    });\r\n\r\n    expect(game).toBeDefined();\r\n    expect(game.diceValue1).toBe(1);\r\n    expect(game.diceValue2).toBe(2);\r\n    expect(game.result).toBe(3);\r\n    expect(game.win).toBe(true);\r\n    expect(game.playerId).toBe(1);\r\n\r\n  });\r\n\r\n  it('should create a game instance', async () => {\r\n    const gameData = {\r\n      diceValue1: 1,\r\n      diceValue2: 2,\r\n      result: 3,\r\n      win: true,\r\n      playerId: 1,\r\n    };\r\n  \r\n    const game = await Game.create(gameData);\r\n  \r\n    // Asegurarse de que el juego se haya creado correctamente\r\n    expect(game).toBeDefined();\r\n    expect(game.diceValue1).toBe(gameData.diceValue1);\r\n    expect(game.diceValue2).toBe(gameData.diceValue2);\r\n    expect(game.result).toBe(gameData.result);\r\n    expect(game.win).toBe(gameData.win);\r\n    expect(game.playerId).toBe(gameData.playerId);\r\n  \r\n    // Asegurarse de que las fechas se hayan establecido correctamente\r\n    expect(game.createdAt).toBeDefined();\r\n    expect(game.updatedAt).toBeDefined();\r\n  \r\n    // Asegurarse de que las fechas sean del tipo Date\r\n    expect(game.createdAt instanceof Date).toBe(true);\r\n    expect(game.updatedAt instanceof Date).toBe(true);\r\n  \r\n    // Asegurarse de que las fechas de creación y actualización sean aproximadamente iguales\r\n    const createdAtTimestamp = game.createdAt.getTime();\r\n    const updatedAtTimestamp = game.updatedAt.getTime();\r\n    expect(updatedAtTimestamp - createdAtTimestamp).toBeLessThanOrEqual(1000); // Menos de 1 segundo de diferencia\r\n  });\r\n  \r\n\r\n  \r\n});\r\n","resolvedModuleNames":["C:/Users/Ivand/DiceGameMVC1/src/models/gameModel.ts","C:/Users/Ivand/DiceGameMVC1/config/sequelize.config.ts"]}],["C:\\Users\\Ivand\\DiceGameMVC1\\src\\models\\gameModel.ts",{"fileContent":"import { DataTypes,Model, Sequelize } from 'sequelize';\r\nimport  sequelize  from '../../config/sequelize.config';\r\n\r\ninterface GameAttributes{\r\n\tid: number;\r\n\tdiceValue1: number;\r\n\tdiceValue2: number;\r\n\tresult: number;\r\n\twin: boolean;\r\n    playerId: number;\r\n\tcreatedAt: Date;\r\n\tupdatedAt: Date;\r\n}\r\n\r\nexport interface GameInstance extends Model<GameAttributes>, GameAttributes {}\r\n\r\nexport const GameDb = sequelize.define<GameInstance>('Games', {\r\n    id: {\r\n        type: DataTypes.BIGINT,\r\n        primaryKey: true,\r\n        autoIncrement: true\r\n    },\r\n\tdiceValue1: {\r\n\t\ttype: DataTypes.INTEGER,\r\n\t\tallowNull: false\r\n\t},\r\n\tdiceValue2: {\r\n\t\ttype: DataTypes.INTEGER,\r\n\t\tallowNull: false\r\n\t},\r\n\tresult: {\r\n\t\ttype: DataTypes.INTEGER,\r\n\t\tallowNull: false\r\n\t},\r\n\twin: {\r\n\t\ttype: DataTypes.BOOLEAN,\r\n\t\tallowNull: false\r\n\t},\r\n\tcreatedAt: {\r\n\t\ttype: DataTypes.DATE,\r\n\t\tdefaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),\r\n\t\tallowNull: false\r\n\t},\r\n\tupdatedAt: {\r\n\t\ttype: DataTypes.DATE,\r\n\t\tdefaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),\r\n\t\tallowNull: false\r\n\t},\r\n\tplayerId: {\r\n\t\ttype: DataTypes.INTEGER,\r\n\t\treferences: {\r\n\t\t\tmodel: 'players',\r\n\t\t\tkey: 'id'\r\n\t\t},\r\n\t\tallowNull: false\r\n\t}\r\n});\r\n\r\nGameDb.sync()","resolvedModuleNames":["C:/Users/Ivand/DiceGameMVC1/config/sequelize.config.ts"]}],["C:\\Users\\Ivand\\DiceGameMVC1\\config\\sequelize.config.ts",{"fileContent":"import { Sequelize } from 'sequelize-typescript';\r\n// import { Player } from '../models/player.model'; // Import your Player model\r\n\r\nconst sequelize = new Sequelize({\r\n  database: 'dicegame',\r\n  username: 'root',\r\n  password: 'password',\r\n  dialect: 'mysql',\r\n  host: 'localhost',\r\n  port: 3306,\r\n  logging: console.log,\r\n});\r\n\r\n// sequelize.addModels([Player]); // Add your Player model to Sequelize\r\n\r\nexport default sequelize;","resolvedModuleNames":[]}]]