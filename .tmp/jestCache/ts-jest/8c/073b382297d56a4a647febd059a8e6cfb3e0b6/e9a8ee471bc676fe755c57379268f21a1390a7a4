[["/home/user/Documents/NODE/DiceGameMVC1/src/__tests__/types/controllers/getAllPlayers.test.ts",{"fileContent":"import { Request, Response } from \"express\";\nimport { getAllPlayers } from \"../../../controllers/PlayerControllerCheck\";\nimport Player from \"src/models/playerModelCheck\";\n\ndescribe('getAllPlayers', () => {\n  it('should return a list of all players in the database', async () => {\n    const mockPlayers = [\n      { id: 1, name: 'Player 1', password: 'password1', wins: 0, losses: 0 },\n      { id: 2, name: 'Player 2', password: 'password2', wins: 0, losses: 0 },\n      { id: 3, name: 'Player 3', password: 'password3', wins: 0, losses: 0 }\n    ];\n\n    Player.findAll = jest.fn().mockResolvedValue(mockPlayers);\n\n    const req = {} as Request;\n    const res = {\n      status: jest.fn().mockReturnThis(),\n      json: jest.fn()\n    } as unknown as Response;\n    const next = jest.fn();\n\n    await getAllPlayers(req, res, next);\n\n    expect(Player.findAll).toHaveBeenCalledWith({});\n    expect(res.status).toHaveBeenCalledWith(200);\n    expect(res.json).toHaveBeenCalledWith({ players: mockPlayers });\n    expect(next).not.toHaveBeenCalled();\n  });\n});\n","resolvedModuleNames":["/home/user/Documents/NODE/DiceGameMVC1/src/controllers/PlayerControllerCheck.ts","/home/user/Documents/NODE/DiceGameMVC1/src/models/playerModelCheck.ts","/home/user/Documents/NODE/DiceGameMVC1/src/types/playerTypes.ts","/home/user/Documents/NODE/DiceGameMVC1/src/models/gameModel.ts","/home/user/Documents/NODE/DiceGameMVC1/src/controllers/GameService.ts","/home/user/Documents/NODE/DiceGameMVC1/config/sequelize.config.ts"]}]]