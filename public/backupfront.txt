este funciona completamente


<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Dice Game</title>

    <link rel="stylesheet" type="text/css" href="styles.css" />
    <script src="https://unpkg.com/htmx.org@1.6.0/dist/htmx.js"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Courier+Prime&family=Montserrat:wght@200;300;400;500&family=Roboto:wght@100;300;500&display=swap"
      rel="stylesheet"
    />
  </head>
  <body>
    <h1>Dice Game</h1>
    <div class="center">
      <a href="http://localhost:3000/front.html">
        <button type="button">Refresh</button>
      </a>
      <br /><br /><br />
    </div>

    <div class="center" id="createplayer">
      <!-- Form for creating a player -->
      <form id="createPlayerForm" hx-post="/api/players">
        <label for="name">Name:</label>
        <input type="text" id="name" name="name" required />
        <br />
        <br />
        <label for="password">Password:</label>
        <input type="password" id="password" name="password" required />
        <br />
        <br />
        <br />

        <button
          type="submit"
          hx-target="#response"
          hx-swap="outerHTML"
          hx-indicator="true"
        >
          Create Player
        </button>
      </form>
    </div>

    <div class="center">
      <!-- Display response from the server -->
      <div id="response">
        <div id="errorMessage" style="color: red"></div>
      </div>
    </div>

    <div class="center" id="getplayers">
      <button
        hx-get="/api/getPlayers"
        hx-target="#response"
        hx-swap="outerHTML"
        hx-indicator="true"
      >
        Get All Players
      </button>
    </div>

      <div class="center">
        
        
        <form id="playGameForm">

          <h2>Enter player's id to play</h2>
          <input type="number" id="id" name="id" required />

          <p>Then roll the dice!</p>
          <button type="button" onclick="playGameForPlayer()">Roll dice!</button>
        </form>
      </div>
      <br>
      <div class="center">
        
          <form id="deletePlayerGames">
  
            <h2>Enter player's id to clean player's roll history</h2>
            <input type="number" id="id" name="id" required />

            <br>
            <button type="button" onclick="deletePlayerGames()">Delete Rolls</button>
          </form>
        </div>
        <br>
        <div class="center" id="getranking">
          <button
            hx-get="/api/ranking"
            hx-target="#response"
            hx-swap="outerHTML"
            hx-indicator="true"
          >
            Get Ranking
          </button>
        </div>
        <br>
        


      </div>
    

    </div>



    

    <!-- <div class="center">
      <-- Display response from the server -->
      <!-- <div id="response"> -->
        <!-- Placeholder for response content >
      </div>
    </div> -->

    <script>
      async function playGameForPlayer() {
        const playerIdInput = document.getElementById("id");
        const playerId = parseInt(playerIdInput.value);

        if (isNaN(playerId)) {
          console.error("Invalid player ID");
          return;
        }

        try {
          const response = await fetch(`/api/game/${playerId}`, {
            method: "POST",
          });

          if (response.ok) {
            const result = await response.json();
            // Display the entire response object in JSON format
            const responseDiv = document.getElementById("response");
            responseDiv.innerHTML = `<pre>${JSON.stringify(
              result,
              null,
              2
            )}</pre>`;
          } else {
            const errorData = await response.json();
            console.error("Error:", errorData.error);
            // Display the error message in the response div
            const responseDiv = document.getElementById("response");
            responseDiv.innerHTML = `<p>Error: ${errorData.error}</p>`;
          }
        } catch (error) {
          console.error("Error:", error);
          // Display the error message in the response div
          const responseDiv = document.getElementById("response");
          responseDiv.innerHTML = `<p>Error: ${error.message}</p>`;
        }
      }
    </script>
  </body>
</html>











este funciona en parte el create game

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Dice Game</title>

    <link rel="stylesheet" type="text/css" href="styles.css" />
    <script src="https://unpkg.com/htmx.org@1.6.0/dist/htmx.js"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Courier+Prime&family=Montserrat:wght@200;300;400;500&family=Roboto:wght@100;300;500&display=swap"
      rel="stylesheet"
    />
  </head>
  <body>
    <h1>Dice Game</h1>
    <div class="center">
      <a href="http://localhost:3000/front.html">
        <button type="button">Refresh</button>
      </a>
      <br /><br /><br />
    </div>

    <div class="center" id="createplayer">
      <!-- Form for creating a player -->
      <form id="createPlayerForm" hx-post="/api/players">
        <label for="name">Name:</label>
        <input type="text" id="name" name="name" required />
        <br />
        <br />
        <label for="password">Password:</label>
        <input type="password" id="password" name="password" required />
        <br />
        <br />
        <br />

        <button
          type="submit"
          hx-target="#response"
          hx-swap="outerHTML"
          hx-indicator="true"
        >
          Create Player
        </button>
      </form>
    </div>

    <div class="center">
      <!-- Display response from the server -->
      <div id="response">
        <div id="errorMessage" style="color: red;"></div>
      </div>
    </div>

    <div class="center">

      <button
  hx-get="/api/getPlayers"
  hx-target="#response"
  hx-swap="outerHTML"
  hx-indicator="true"
>
  Get All Players
</button>



    </div>

    <!-- ESTE SIRVE Form for playing a game 
<form id="playGameForm" hx-post="/api/game/0">  Use a default value for hx-post
  <input type="text" id="id" name="id" required />
  <button type="submit" hx-target="#response" hx-swap="outerHTML" hx-indicator="true">Start Game</button>
</form> -->

<div class="center">
  <!-- Form for playing a game -->
  <br>
  <form id="playGameForm">
    <p>Enter a player's id</p>
    <input type="number" id="id" name="id" required />
    <br>
    <button
      type="button"
      onclick="playGameForPlayer()"
    >
      Start Game
    </button>
  </form>
</div>

<div class="center">
  <!-- Display response from the server -->
  <div id="response">
    <!-- Placeholder for response content -->
  </div>
</div>

<script>
  async function playGameForPlayer() {
    const playerIdInput = document.getElementById("id");
    const playerId = parseInt(playerIdInput.value);

    if (isNaN(playerId)) {
      console.error("Invalid player ID");
      return;
    }

    try {
      const response = await fetch(`/api/game/${playerId}`, {
        method: "POST",
      });

      if (response.ok) {
        const result = await response.json();
        // Display the entire response object in JSON format
        const responseDiv = document.getElementById("response");
        responseDiv.innerHTML = `<pre>${JSON.stringify(result, null, 2)}</pre>`;
      } else {
        const errorData = await response.json();
        console.error("Error:", errorData.error);
        // Display the error message in the response div
        const responseDiv = document.getElementById("response");
        responseDiv.innerHTML = `<p>Error: ${errorData.error}</p>`;
      }
    } catch (error) {
      console.error("Error:", error);
      // Display the error message in the response div
      const responseDiv = document.getElementById("response");
      responseDiv.innerHTML = `<p>Error: ${error.message}</p>`;
    }
  }
</script>


  
    


  </body>
</html>



<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Dice Game</title>

    <link rel="stylesheet" type="text/css" href="styles.css" />
    <script src="https://unpkg.com/htmx.org@1.6.0/dist/htmx.js"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Courier+Prime&family=Montserrat:wght@200;300;400;500&family=Roboto:wght@100;300;500&display=swap"
      rel="stylesheet"
    />
  </head>
  <body>
    <h1>Dice Game</h1>
    <div class="center">
      <a href="http://localhost:3000/front.html">
        <button type="button">Refresh</button>
      </a>
      <br /><br /><br />
    </div>

    <div class="center" id="createplayer">
      <!-- Form for creating a player -->
      <form id="createPlayerForm" hx-post="/api/players">
        <label for="name">Name:</label>
        <input type="text" id="name" name="name" required />
        <br />
        <br />
        <label for="password">Password:</label>
        <input type="password" id="password" name="password" required />
        <br />
        <br />
        <br />

        <button
          type="submit"
          hx-target="#response"
          hx-swap="outerHTML"
          hx-indicator="true"
        >
          Create Player
        </button>
      </form>
    </div>

    <div class="center">
      <!-- Display response from the server -->
      <div id="response">
        <div id="errorMessage" style="color: red;"></div>
      </div>
    </div>

    <div class="center">

      <button
  hx-get="/api/getPlayers"
  hx-target="#response"
  hx-swap="outerHTML"
  hx-indicator="true"
>
  Get All Players
</button>



    </div>

    <!-- ESTE SIRVE Form for playing a game 
<form id="playGameForm" hx-post="/api/game/0">  Use a default value for hx-post
  <input type="text" id="id" name="id" required />
  <button type="submit" hx-target="#response" hx-swap="outerHTML" hx-indicator="true">Start Game</button>
</form> -->

<div class="center">
  <!-- Form for playing a game -->
  <form id="playGameForm">
    <input type="number" id="id" name="id" required />
    <button
      type="button"
      onclick="playGameForPlayer()"
    >
      Start Game
    </button>
  </form>
</div>

<div class="center">
  <!-- Display response from the server -->
  <div id="response">
    <!-- Placeholder for response content -->
  </div>
</div>

<script>
  async function playGameForPlayer() {
    const playerIdInput = document.getElementById("id");
    const playerId = parseInt(playerIdInput.value); // Convert to a number

    if (isNaN(playerId)) {
      // Handle the case where the input is not a valid number
      console.error("Invalid player ID");
      return;
    }

    // Make an HTTP request to the backend with the id
    try {
      const response = await fetch(`/api/game/${playerId}`, {
        method: "POST",
      });

      if (response.ok) {
        // Handle success response
        const result = await response.json();
        // Display the result to the user or take further actions
        console.log(result);
      } else {
        // Handle error response
        const errorData = await response.json();
        console.error("Error:", errorData.error);
      }
    } catch (error) {
      console.error("Error:", error);
    }
  }
</script>

  
    


  </body>
</html>






<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Dice Game</title>

    <link rel="stylesheet" type="text/css" href="styles.css" />
    <script src="https://unpkg.com/htmx.org@1.6.0/dist/htmx.js"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Courier+Prime&family=Montserrat:wght@200;300;400;500&family=Roboto:wght@100;300;500&display=swap"
      rel="stylesheet"
    />
  </head>
  <body>
    <h1>Dice Game</h1>
    <div class="center">

      <a href="http://localhost:3000/front.html"><button type="button">Refresh</button>
      </a>
<br><br><br>

    </div>

    <div class="center">
      <div class="center hidden" id="createplayer" >
        <!-- Form for creating a player -->
        <form id="createPlayerForm" hx-post="/api/players">
          <label for="name">Name:</label>
          <input type="text" id="name" name="name" required />
          <br />
          <br />
          <label for="password">Password:</label>
          <input type="password" id="password" name="password" required />
          <br />
          <br />
          <br />

          <button
            type="submit"
            hx-target="#response"
            hx-swap="outerHTML"
            hx-indicator="true"
          >
            Create Player
          </button>
        </form>
      </div>
    </div>
    <div class="center">
      <!-- Display response from the server -->
      <div id="response">
        <div id="errorMessage" style="color: red;"></div>
      </div>
    </div>

    <script>
      document.addEventListener("htmx:configRequest", function (event) {
        // Reset any previous error or success messages
        document.getElementById("errorMessage").textContent = "";
      });

      document.addEventListener("htmx:responseError", function (event) {
        // Handle error response from the server
        const response = event.detail.xhr.response;
        if (response && response.error) {
          document.getElementById("errorMessage").textContent = response.error;
        }
      });

      document.addEventListener("htmx:response", function (event) {
        // Handle success response from the server
        const response = event.detail.xhr.response;
        if (response && response.message) {
          document.getElementById("errorMessage").textContent = "";
        }
      });
    </script>
   
  </body>
</html>
